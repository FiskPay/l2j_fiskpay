--- GameServerThread.java
+++ GameServerThread.java
@@ -17,6 +17,7 @@
 import org.l2jmobius.loginserver.network.GameServerPacketHandler.GameServerState;
 import org.l2jmobius.loginserver.network.ScrambledKeyPair;
 import org.l2jmobius.loginserver.network.loginserverpackets.ChangePasswordResponse;
+import org.l2jmobius.loginserver.network.loginserverpackets.FiskPayRequestSend;
 import org.l2jmobius.loginserver.network.loginserverpackets.InitLS;
 import org.l2jmobius.loginserver.network.loginserverpackets.KickPlayer;
 import org.l2jmobius.loginserver.network.loginserverpackets.LoginServerFail;
@@ -132,13 +133,15 @@
		finally
		{
			if (isAuthed())
			{
				if (_gsi != null)
				{
					_gsi.setDown();
				}
				LOGGER.info("Server [" + getServerId() + "] " + GameServerTable.getInstance().getServerNameById(getServerId()) + " is now set as disconnected.");
+
+				FiskPayLoginClient.getInstance().updateServers(getServerId(),false);
			}
			LoginServer.getInstance().getGameServerListener().removeGameServer(this);
			LoginServer.getInstance().getGameServerListener().removeFloodProtection(_connectionIp);
		}
@@ -168,9 +171,11 @@
	public void attachGameServerInfo(GameServerInfo gsi, int port, String[] hosts, int maxPlayers)
	{
		setGameServerInfo(gsi);
		gsi.setGameServerThread(this);
		gsi.setPort(port);
		setGameHosts(hosts);
		gsi.setMaxPlayers(maxPlayers);
		gsi.setAuthed(true);
+
+		FiskPayLoginClient.getInstance().updateServers(getServerId(),true);
	}
@@ -288,9 +293,14 @@ 
 	public void changePasswordResponse(String characterName, String msgToSend)
 	{
 		sendPacket(new ChangePasswordResponse(characterName, msgToSend));
 	}
+
+	public void sendFiskPayRequest(int requestId, String request)
+	{
+		sendPacket(new FiskPayRequestSend(requestId, request));
+	}
 
 	/**
 	 * @param hosts The gameHost to set.
	 */
	public void setGameHosts(String[] hosts)